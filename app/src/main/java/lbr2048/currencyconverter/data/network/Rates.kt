package lbr2048.currencyconverter.data.network

import com.squareup.moshi.Json
import lbr2048.currencyconverter.ui.Rate

data class Rates(
    @Json(name = "AUD") var AUD: Double? = null,
    @Json(name = "BGN") var BGN: Double? = null,
    @Json(name = "BRL") var BRL: Double? = null,
    @Json(name = "CAD") var CAD: Double? = null,
    @Json(name = "CHF") var CHF: Double? = null,
    @Json(name = "CNY") var CNY: Double? = null,
    @Json(name = "CZK") var CZK: Double? = null,
    @Json(name = "DKK") var DKK: Double? = null,
    @Json(name = "GBP") var GBP: Double? = null,
    @Json(name = "HKD") var HKD: Double? = null,
    @Json(name = "HRK") var HRK: Double? = null,
    @Json(name = "HUF") var HUF: Double? = null,
    @Json(name = "IDR") var IDR: Double? = null,
    @Json(name = "ILS") var ILS: Double? = null,
    @Json(name = "INR") var INR: Double? = null,
    @Json(name = "ISK") var ISK: Double? = null,
    @Json(name = "JPY") var JPY: Double? = null,
    @Json(name = "KRW") var KRW: Double? = null,
    @Json(name = "MXN") var MXN: Double? = null,
    @Json(name = "MYR") var MYR: Double? = null,
    @Json(name = "NOK") var NOK: Double? = null,
    @Json(name = "NZD") var NZD: Double? = null,
    @Json(name = "PHP") var PHP: Double? = null,
    @Json(name = "PLN") var PLN: Double? = null,
    @Json(name = "RON") var RON: Double? = null,
    @Json(name = "RUB") var RUB: Double? = null,
    @Json(name = "SEK") var SEK: Double? = null,
    @Json(name = "SGD") var SGD: Double? = null,
    @Json(name = "THB") var THB: Double? = null,
    @Json(name = "USD") var USD: Double? = null,
    @Json(name = "ZAR") var ZAR: Double? = null
) {

    fun getRatesMap(): Map<String, Double?> = mapOf(
        "EUR" to 1.0,
        "AUD" to AUD,
        "BGN" to BGN,
        "BRL" to BRL,
        "CAD" to CAD,
        "CHF" to CHF,
        "CNY" to CNY,
        "CZK" to CZK,
        "DKK" to DKK,
        "GBP" to GBP,
        "HKD" to HKD,
        "HRK" to HRK,
        "HUF" to HUF,
        "IDR" to IDR,
        "ILS" to ILS,
        "INR" to INR,
        "ISK" to ISK,
        "JPY" to JPY,
        "KRW" to KRW,
        "MXN" to MXN,
        "MYR" to MYR,
        "NOK" to NOK,
        "NZD" to NZD,
        "PHP" to PHP,
        "PLN" to PLN,
        "RON" to RON,
        "RUB" to RUB,
        "SEK" to SEK,
        "SGD" to SGD,
        "THB" to THB,
        "USD" to USD,
        "ZAR" to ZAR
    )

    fun getRates(): List<Rate> = listOf(
        Rate(currencyCode = "EUR", value = 1.0),
        Rate(currencyCode = "AUD", value = AUD!!),
        Rate(currencyCode = "BGN", value = BGN!!),
        Rate(currencyCode = "BRL", value = BRL!!),
        Rate(currencyCode = "CAD", value = CAD!!),
        Rate(currencyCode = "CHF", value = CHF!!),
        Rate(currencyCode = "CNY", value = CNY!!),
        Rate(currencyCode = "CZK", value = CZK!!),
        Rate(currencyCode = "DKK", value = DKK!!),
        Rate(currencyCode = "GBP", value = GBP!!),
        Rate(currencyCode = "HKD", value = HKD!!),
        Rate(currencyCode = "HRK", value = HRK!!),
        Rate(currencyCode = "HUF", value = HUF!!),
        Rate(currencyCode = "IDR", value = IDR!!),
        Rate(currencyCode = "ILS", value = ILS!!),
        Rate(currencyCode = "INR", value = INR!!),
        Rate(currencyCode = "ISK", value = ISK!!),
        Rate(currencyCode = "JPY", value = JPY!!),
        Rate(currencyCode = "KRW", value = KRW!!),
        Rate(currencyCode = "MXN", value = MXN!!),
        Rate(currencyCode = "MYR", value = MYR!!),
        Rate(currencyCode = "NOK", value = NOK!!),
        Rate(currencyCode = "NZD", value = NZD!!),
        Rate(currencyCode = "PHP", value = PHP!!),
        Rate(currencyCode = "PLN", value = PLN!!),
        Rate(currencyCode = "RON", value = RON!!),
        Rate(currencyCode = "RUB", value = RUB!!),
        Rate(currencyCode = "SEK", value = SEK!!),
        Rate(currencyCode = "SGD", value = SGD!!),
        Rate(currencyCode = "THB", value = THB!!),
        Rate(currencyCode = "USD", value = USD!!),
        Rate(currencyCode = "ZAR", value = ZAR!!)
    )
}